	.ORIG x3000
;MAIN
	JSR DISPLAY_PROMPT
	HALT
;DISPLAY_PROMPT
DISPLAY_PROMPT	ST R0,Save_R0_DISPLAY
	LD	R0,CURRENT_PLAYER
	NOT R0,R0
	ADD R0,R0,#4
	ST R0,CURRENT_PLAYER
	LEA R0,Prompt
	PUTS
	LEA R0 CURRENT_PLAYER
	PUTS
	LD R0,HC
	OUT
	LD R0,Save_R0_DISPLAY
	RET
Save_R0_DISPLAY	.BLKW #1
Prompt	.STRINGZ "Player "
CURRENT_PLAYER	.FILL #1
		.STRINGZ ", input a move (or 'Q' to quit):"
HC		.FILL x0A
;IS_INPUT_VALID
IS_INPUT_VALID	
;TRANSLATE_MOVE
TRANSLATE_MOVE ST R2,Save_R2_TRAN
	LD 	R2,NEG0
	ADD	R0,R0,R2
	LD 	R2,NEGA
	ADD R1,R1,R2
	LD 	R2,Save_R2_TRAN
	RET
Save_R2_TRAN	.BLKW #1
NEG0	.FILL	#-48
NEGA 	.FILL	#-65
;IS_OCUUPIED
IS_OCUUPIED
;GET_ADDRESS
GET_ADDRESS	ST R4,Save_R4_GET_ADDR
	ST R0,Save_R0_GET_ADDR
	LEA R3,ROW0
	AND R4,R4,#0
	ADD R4,R4,#8
	ADD R0,R0,#0
L1	BRz E1
	ADD R3,R3,R4
	ADD R0,R0,#-1
	BR L1
E1	ADD R3,R3,R1
	LD R0,Save_R0_GET_ADDR
	LD R4,Save_R4_GET_ADDR
	RET
Save_R0_GET_ADDR .BLKW #1
Save_R4_GET_ADDR .BLKW #1
;ALLPY_MOVE
ALLPY_MOVE	ST R2,Save_R1_ALLPY_MOVE
	ST R3,Save_R3,ALLPY_MOVE
	ADD R2,R1,#-1
	BRz HYP
	ADD R2,R1,#-3
	BRz HYP
	ADD R2,R1,#-5
	BRz HYP
	LD R2,pipe
	JSR GET_ADDRESS
	STR R3,R2,#0
	BR ENDALLPY
HYP LD R2,hyphen
	JSR GET_ADDRESS
	STR R3,R2,#0
ENDALLPY LD R2,Save_R2_ALLPY_MOVE
	LD R3,Save_R3_ALLPY_MOVE
	RET
pipe	.FILL x7C
hyphen	.FILL x45
Save_R2_ALLPY_MOVE .BLKW #1
Save_R3_ALLPY_MOVE .BLKW #1
;FILL_BOX
FILL_BOX ST R3,Save_R3_FILL_BOX
	ST R4,Save_R4_FILL_BOX
	ST R7,Save_R7_FILL_BOX
	LD R4,CURRENT_PLAYER
	JSR GET_ADDRESS
	STR R4,R3,#0
	LD R3,Save_R3_FILL_BOX
	LD R4,Save_R4_FILL_BOX
	LD R7,Save_R7_FILL_BOX
	RET
Save_R3_FILL_BOX .BLKW #1
Save_R4_FILL_BOX .BLKW #1
Save_R7_FILL_BOX .BLKW #1
;UPDATE_STATE
UPDATE_STATE 
ROW0	.STRINGZ "* * * *"
ROW1	.STRINGZ "       "
ROW2	.STRINGZ "* * * *"
ROW3	.STRINGZ "       "
ROW4	.STRINGZ "* * * *"
ROW5	.STRINGZ "       "
ROW6	.STRINGZ "* * * *"
Save_R0 .BLKW #1
Save_R1	.BLKW #1
Save_R2 .BLKW #1
	.END